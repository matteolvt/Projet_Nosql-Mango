// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  nom       String
  prenom    String
  role      String     @default("student")
  createdAt DateTime   @default(now())
  commandes Commande[]
  favoris   Favori[]
}

model Plat {
  id          String         @id @default(uuid())
  nom         String
  description String
  prix        Float
  categorie   String
  allergenes  String
  disponible  Boolean        @default(true)
  image       String?
  createdAt   DateTime       @default(now())
  commandes   CommandePlat[]
  favoris     Favori[]
}

model Commande {
  id             String         @id @default(uuid())
  user           User           @relation(fields: [userId], references: [id])
  userId         String
  total          Float
  statut         String         @default("en_attente")
  pointLivraison String
  plats          CommandePlat[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model CommandePlat {
  id           String   @id @default(uuid())
  commande     Commande @relation(fields: [commandeId], references: [id])
  commandeId   String
  plat         Plat     @relation(fields: [platId], references: [id])
  platId       String
  quantite     Int
  prixUnitaire Float
}

model Favori {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  plat   Plat   @relation(fields: [platId], references: [id])
  platId String

  @@unique([userId, platId])
}
